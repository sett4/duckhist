# .clinerules

## 作業開始準備

`git status` で現在の git のコンテキストを確認します。
もし指示された内容と無関係な変更が多い場合、現在の変更からユーザーに別のタスクとして開始するように提案してください。

無視するように言われた場合は、そのまま続行します。


## 設計に関して

全体概要は docs/overview.md を参照してください。
各サブコマンドの詳細に関しては docs/subcommand_$subcommand.md を参照してください。


## プログラム内のコメントとメッセージに関して

- プログラム内のコメントは英語で記載すること
- 画面に出力するメッセージは英語をデフォルトとすること

## コミットに関して

- 指示されるまでコミットはしないでください。コミットしたくなったらユーザーに聞いてください
- コミットの前に`git status`で変更されたファイルを確認してください。
- コミットメッセージはConventional Commitsのフォーマット <type>[optional scope]: <description> とします
  - optional scopeは(<scope>)とし、scopeの選択肢はサブコマンドのadd,list等とします。共通の場合はoptional scopeは無くて良いです
- コミットメッセージは1行目は50文字以内とします
- 詳細を書いたほうが良い場合はコミットメッセージは3行目以降に詳細を記述します

## タスク完了の前に

- `go test`でテストの成功を確認すること
- `go build -o duckhist ./cmd`でビルドすること
